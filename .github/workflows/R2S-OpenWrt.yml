name: R2S-OpenWrt

on:
  # schedule:
  #  - cron: 5 6 * * 0
  # watch:
  #  types: started
  # push:
  #   branches:
  #     - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a
    # - name: Free disk space
    #   run: |
    #     sudo -E swapoff -a
    #     sudo -E rm -f /swapfile
    #     sudo -E docker image prune -a -f
    #     sudo -E snap set system refresh.retain=2
    #     sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
    #     sudo -E apt-get -y autoremove --purge
    #     sudo -E apt-get clean
    #     sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
    #     [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    #     df -h
    # - name: Init build dependencies
    #   env:
    #     DEBIAN_FRONTEND: noninteractive
    #   run: |
    #     sudo -E rm -rf /etc/apt/sources.list.d
    #     sudo -E apt-get update -y
    #     sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
    #     wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
    #     sudo -E apt-get clean -y
    #     git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
    #     df -h
    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner /home/runner/work/neri
        cp -r ./SCRIPTS/R2S/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
    - name: Prepare Package
      run: |
        cd openwrt
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 02_target_only.sh
    - name: Convert Translation
      run: |
        cd openwrt
        /bin/bash 03_convert_translation.sh
    - name: Add ACL
      run: |
        cd openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd openwrt
        mv ../SEED/R2S/config.seed .config
        #echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config
        make defconfig
    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}-" >>$GITHUB_ENV
    - name: Cache
      uses: klever1988/cachewrtbuild@test
      with:
        ccache: 'true'
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt
    - name: Make Download
      run: |
        df -h
        cd openwrt
        make download -j50
    - name: Compile Openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        df -h
        cd openwrt
        make -j$(($(nproc) + 1)) || make -j$(($(nproc) + 1)) V=s
        echo $?
    - name: If Error
      if: steps.compileopenwrt.outcome == 'failure'
      run: |
        cat openwrt/.config
        echo '================================================================'
        cd openwrt && make -j1 V=s
    - name: Print Disk Space After
      run: df -h
    - name: Organize files
      id: organize
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        mv openwrt/bin/targets/rockchip/armv8/*sysupgrade.img* ./artifact/
        cd ./artifact/
        ls -Ahl
        gzip -d *.gz && exit 0
        gzip --best *.img
        ls -Ahl
        sha256sum openwrt*r2s* | tee R2S-GC404-$(date +%Y-%m-%d)-21.02.sha256sum
        mv *r2s*ext4* R2S-Neri-$(date +%Y-%m-%d)-21.02-ext4-sysupgrade.img.gz
        mv *r2s*squashfs* R2S-Neri-$(date +%Y-%m-%d)-21.02-squashfs-sysupgrade.img.gz
        ls -Ahl
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: OpenWRT_21.02
        path: ./artifact/

    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1.8.0
      with:
        name: OpenWRT-21.02.0
        allowUpdates: true
        tag: 21.02.0
        commit: master
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ./artifact/*.gz
